l2 <- F
l2
typeof(l2)
# Transforming numeric into characters
num <- 10
numToChar <- as.character(num)
paste("num Type: ", typeof(num), " | numToChar: ", typeof(numToChar))
# Transforming characters into numeric
char <- "10"
charToNum <- as.numeric(char)
paste("char Type: ", typeof(num), " | charToNum: ", typeof(numToChar))
# Check the data type of the following variables
a <- as.integer(500)
b <- as.double(500)
c <- as.character(500)
# Enter your code here!
typeof(a)
typeof(b)
typeof(c)
# Check the data type of the following variable
d <- a / b
# Enter your code here!
typeof(d)
# Vector
v1 <- c(1, 2, 3, 4, 5)
v1
is.vector(v1)
v2 <- c("a", "b", "c")
v2
is.vector(v2)
v3 <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
v3
is.vector(v3)
# Matrix
m1 <- matrix(c(T, T, F, F, T, F), nrow = 2)
m1
is.matrix(m1)
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2,
byrow = T)
m2
is.matrix(m2)
# Enter your code here.
v1 <- c(letters)
v1
is.vector(v1)
n1 <- matrix(c(LETTERS), nrow = 13)
n1
is.matrix(n1)
# Data Frame
# Can combine vectors of the same length
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df2 <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df2  # Makes a data frame with three different data types
# Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
setwd("/Users/chrisalbert/Documents")
getwd()
### Installing packages
# Install a new package, note the quotation marks
# install.packages("dplyr")
install.packages("dplyr")
# Loading the packageh, note no quotation marks
# library(dplyr)
library(dplyr)
# Checking the package version
# pacakgeVersion("dplyr")
packageVersion("dplyr")
# Checking the session info
# sessionInfo()
sessionInfo()
------------------------------------------------------------------------
## Section 4 - Problem Solving
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
```{r}
# Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
setwd("/Users/chrisalbert/Documents")
getwd()
### Installing packages
# Install a new package, note the quotation marks
# install.packages("dplyr")
install.packages("dplyr")
# Loading the packageh, note no quotation marks
# library(dplyr)
library(dplyr)
# Checking the package version
# pacakgeVersion("dplyr")
packageVersion("dplyr")
# Checking the session info
# sessionInfo()
sessionInfo()
------------------------------------------------------------------------
## Section 4 - Problem Solving
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
```{r}
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
#Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
setwd("/Users/chrisalbert/Documents")
getwd()
### Installing packages
# Install a new package, note the quotation marks
# install.packages("dplyr")
install.packages("dplyr")
# Loading the packageh, note no quotation marks
# library(dplyr)
library(dplyr)
# Checking the package version
# pacakgeVersion("dplyr")
packageVersion("dplyr")
# Checking the session info
# sessionInfo()
sessionInfo()
------------------------------------------------------------------------
## Section 4 - Problem Solving
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
# Write your code here!
# Part a
x<-c(4)
#Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
setwd("/Users/chrisalbert/Documents")
getwd()
### Installing packages
# Install a new package, note the quotation marks
# install.packages("dplyr")
install.packages("dplyr")
# Loading the packageh, note no quotation marks
# library(dplyr)
library(dplyr)
# Checking the package version
# pacakgeVersion("dplyr")
packageVersion("dplyr")
# Checking the session info
# sessionInfo()
sessionInfo()
------------------------------------------------------------------------
## Section 4 - Problem Solving
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
# Write your code here!
# Part a
x<-c(4)
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
# Write your code here!
# Part a
x<-c(4)
x
# Part b
y<-c(12)
y
# Part c
print (x)
print(y)
# Part d
z<-c(y/x)
z
# Part e
print(paste("y divided by x is equal to ", z))
# Do not need to change the following code!
# Write your code here!
# Part a
x<-c(4)
x
# Part b
y<-c(12)
y
# Part c
print (x)
print(y)
# Part d
z<-c(y/x)
z
# Part e
print(paste("y divided by x is equal to ", z))
# Do not need to change the following code!
if (exists("x") == TRUE | exists("y") == TRUE | exists("z") == TRUE){
if (x == 4 & y == 12 & z == 3) {
print("Congratulation!!  You completed the first activity in this class!!")
} else {
print("Sorry, you got it wrong!")
}
} else {
print("You did not complete the last problem!")
}
#Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
setwd("/Users/chrisalbert/Documents")
getwd()
### Installing packages
# Install a new package, note the quotation marks
# install.packages("dplyr")
# install.packages("dplyr")
# Loading the packageh, note no quotation marks
# library(dplyr)
library(dplyr)
# Checking the package version
# pacakgeVersion("dplyr")
packageVersion("dplyr")
# Checking the session info
# sessionInfo()
sessionInfo()
------------------------------------------------------------------------
## Section 4 - Problem Solving
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
# Write your code here!
# Part a
x<-c(4)
#Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
setwd("/Users/chrisalbert/Documents")
getwd()
### Installing packages
# Install a new package, note the quotation marks
# install.packages("dplyr")
# install.packages("dplyr")
# Loading the packageh, note no quotation marks
# library(dplyr)
library(dplyr)
# Checking the package version
# pacakgeVersion("dplyr")
packageVersion("dplyr")
# Checking the session info
# sessionInfo()
sessionInfo()
------------------------------------------------------------------------
## Section 4 - Problem Solving
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
# Write your code here!
# Part a
x<-c(4)
x<-c(4)
x<-c(4)
x<-c(4)
x<-c(4)
x
x
#Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
setwd("/Users/chrisalbert/Documents")
getwd()
### Installing packages
# Install a new package, note the quotation marks
# install.packages("dplyr")
# install.packages("dplyr")
# Loading the packageh, note no quotation marks
# library(dplyr)
library(dplyr)
# Checking the package version
# pacakgeVersion("dplyr")
packageVersion("dplyr")
# Checking the session info
# sessionInfo()
sessionInfo()
------------------------------------------------------------------------
## Section 4 - Problem Solving
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
# Write your code here!
# Part a
x<-c(4)
x<-c(4)
x
#Write the code that accomplish the following tasks:
#Part a: Assign 4 to variable x
#Part b: Assign 12 to variable y
#Part c: Print both x and y to check their values
#Part d: Divide y by x and assign it to variable z
#part e: Print a statement to report your answer in Part d.
#Once you finished and knit the RMarkdown file into html file, you should
#be able to see the message "Congratulation!! You completed the first
# exercise in this section!!" in the html document.
# Write your code here!
# Part a
x<-c(4)
x
# Part b
y<-c(12)
y
# Part c
print (x)
print(y)
# Part d
z<-c(y/x)
z
# Part e
print(paste("y divided by x is equal to ", z))
# Do not need to change the following code!
if (exists("x") == TRUE | exists("y") == TRUE | exists("z") == TRUE){
if (x == 4 & y == 12 & z == 3) {
print("Congratulation!!  You completed the first activity in this class!!")
} else {
print("Sorry, you got it wrong!")
}
} else {
print("You did not complete the last problem!")
knitr::opts_chunk$set(echo = TRUE)
# Enter your code here!
typeof(a)
typeof(d)
# Check the data type of the following variables
a <- as.integer(500)
b <- as.double(500)
c <- as.character(500)
# Enter your code here!
typeof(a)
# Check the data type of the following variable
d <- a / b
# Enter your code here!
typeof(d)
# Enter your code here.
v1 <- c(letters)
v1
is.vector(v1)
# Enter your code here.
v1 <- c(letters)
v1
is.vector(v1)
n1 <- matrix(c(LETTERS), nrow = 13)
n1
is.matrix(n1)
# Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
getwd()
wd1 = getwd()
print ("Current Working Directory: ", wd1")
wd1 = getwd()
print ("Current Working Directory: ", wd1")
wd1 = getwd()
print ("Current Working Directory: ", wd1)
getwd()
print ("Current Working Directory: ", wd1)
getwd()
print ("Current Working Directory: ", wd1)
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
# Write your code here!
# Part a
x<-c(4)
# Part b
y<-c(12)
# Part c
print (x)
print(y)
# Part d
z<-c(y/x)
z
# Part e
print(paste("y divided by x is equal to ", z))
# Do not need to change the following code!
if (exists("x") == TRUE | exists("y") == TRUE | exists("z") == TRUE){
if (x == 4 & y == 12 & z == 3) {
print("Congratulation!!  You completed the first activity in this class!!")
} else {
print("Sorry, you got it wrong!")
}
} else {
print("You did not complete the last problem!")
}
rm(list = ls())
setwd("/Users/Documents/DS311R")
knitr::opts_chunk$set(echo = TRUE)
# Loading the data
data(mtcars)
# Head of the data set
head(mtcars)
setwd("/Users/chrisalbert/Documents/DS311R")
---
title: "DS311 - R Lab Assignment"
# Enter your code here!
# Answer:
print("There are total of _____ variables and _____ observations in this data set.")
# Enter your code here!
summary(mtcars)
# Enter your code here!
ncol(mtcars)
# Answer:
print("There are total of _____ variables and _____ observations in this data set.")
# Enter your code here!
nrow(mtcars)
# Answer:
print("There are total of 11 variables and _____ observations in this data set.")
# Enter your code here!
ncol(mtcars)
nrow(mtcars)
# Answer:
print("There are total of 32 variables and _____ observations in this data set.")
# Enter your code here!
ncol(mtcars)
nrow(mtcars)
# Answer:
print("There are total of 32 variables and 352 observations in this data set.")
# Enter your code here!
list(mtcars)
# Answer:
print("There are _____ discrete variables and _____ continuous variables in this data set.")
# Enter your code here!
summary(mtcars)
